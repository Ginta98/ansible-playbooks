# user nginx;
# worker_processes auto;
error_log /var/log/nginx/error.log;
# pid /run/nginx.pid;

# events {
#    worker_connections 1024;
# }
#fastcgi_buffers 16 128k;
#fastcgi_buffer_size 256k;

server {
    server_name  {{ domain }};

    #charset koi8-r;
    access_log  /var/log/nginx/{{ domain }}.access.log  main;


    root /app/ansible/{{ name_folder_app }}/public;
#    root /home/home/backup/homedir/daitheky_testbed;
#    root /home/home/backup/homedir/public_html;

    index index.html index.htm index.php;

    charset utf-8;

        # set expiration of assets to MAX for caching
        location ~* \.(ico|css|js|gif|jpe?g|png)(\?[0-9]+)?$ {
                        expires max;
                        log_not_found off;
        }


        location / {

                try_files $uri $uri/ /index.php;

                location = /index.php {

                        fastcgi_pass   127.0.0.1:9000;
                        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
                        include        fastcgi_params;
                }
        }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    # error_page   500 502 503 504  /50x.html;
    # location = /50x.html {
    #     root   /usr/share/nginx/html;
    # }
    
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }



#    listen 443 ssl; # managed by Certbot
#    ssl_certificate /etc/letsencrypt/live/dev.daitheky.net/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/dev.daitheky.net/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {
    if ($host = {{ domain }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name  {{ domain }};
    listen 84;
    return 404; # managed by Certbot


}
